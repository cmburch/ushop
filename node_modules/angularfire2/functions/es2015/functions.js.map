{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../../src/functions/functions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAClF,OAAO,EAAc,IAAI,EAAE,MAAM,MAAM,CAAC;AACxC,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAIhD,OAAO,EAAqB,oBAAoB,EAAE,yBAAyB,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAG1I,MAAM;IASJ,YACgC,OAAuB,EACN,YAA+C,EACzE,UAAkB,EACvC,IAAY;QAIZ,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAE5D,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,IAAI,CACpC,GAAG,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,EACrD,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,EAC3B,iBAAiB,CAAC,IAAI,CAAC,CACxB,CAAC;QAEF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CACtD,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,EAC/C,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EACrC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC9B,iBAAiB,CAAC,IAAI,CAAC,CACxB,CAAA;IAEH,CAAC;;;YAjCF,UAAU;;;4CAWN,MAAM,SAAC,oBAAoB;4CAC3B,QAAQ,YAAI,MAAM,SAAC,yBAAyB;YACZ,MAAM,uBAAtC,MAAM,SAAC,WAAW;YArBgB,MAAM","sourcesContent":["import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { FirebaseOptions, FirebaseAppConfig } from 'angularfire2';\n\nimport { FirebaseFunctions, FirebaseOptionsToken, FirebaseNameOrConfigToken, _firebaseAppFactory, runOutsideAngular } from 'angularfire2';\n\n@Injectable()\nexport class AngularFireFunctions {\n\n  /**\n   * Firebase Functions instance\n   */\n  public readonly functions: Observable<FirebaseFunctions>;\n\n  public httpsCallable: <T=any, R=any>(name:string) => (data: T) => Observable<T>;\n\n  constructor(\n    @Inject(FirebaseOptionsToken) options:FirebaseOptions,\n    @Optional() @Inject(FirebaseNameOrConfigToken) nameOrConfig:string|FirebaseAppConfig|undefined,\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n\n    // @ts-ignore\n    const requireFunctions = from(import('firebase/functions'));\n\n    this.functions = requireFunctions.pipe(\n      map(() => _firebaseAppFactory(options, nameOrConfig)),\n      map(app => app.functions()),\n      runOutsideAngular(zone)\n    );\n\n    this.httpsCallable = name => data => this.functions.pipe(\n      map(functions => functions.httpsCallable(name)),\n      switchMap(callable => callable(data)),\n      map(response => response.data),\n      runOutsideAngular(zone)\n    )\n\n  }\n\n}\n"]}