import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';
import { from } from 'rxjs';
import { map, switchMap } from 'rxjs/operators';
import { FirebaseOptionsToken, FirebaseNameOrConfigToken, _firebaseAppFactory, runOutsideAngular } from 'angularfire2';
export class AngularFireFunctions {
    constructor(options, nameOrConfig, platformId, zone) {
        const requireFunctions = from(import('firebase/functions'));
        this.functions = requireFunctions.pipe(map(() => _firebaseAppFactory(options, nameOrConfig)), map(app => app.functions()), runOutsideAngular(zone));
        this.httpsCallable = name => data => this.functions.pipe(map(functions => functions.httpsCallable(name)), switchMap(callable => callable(data)), map(response => response.data), runOutsideAngular(zone));
    }
}
AngularFireFunctions.decorators = [
    { type: Injectable },
];
AngularFireFunctions.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [FirebaseOptionsToken,] }] },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FirebaseNameOrConfigToken,] }] },
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
    { type: NgZone }
];
//# sourceMappingURL=functions.js.map