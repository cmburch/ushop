import { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';
import { from } from 'rxjs';
import { map, switchMap } from 'rxjs/operators';
import { FirebaseOptionsToken, FirebaseNameOrConfigToken, _firebaseAppFactory, runOutsideAngular } from 'angularfire2';
var AngularFireFunctions = (function () {
    function AngularFireFunctions(options, nameOrConfig, platformId, zone) {
        var _this = this;
        var requireFunctions = from(import('firebase/functions'));
        this.functions = requireFunctions.pipe(map(function () { return _firebaseAppFactory(options, nameOrConfig); }), map(function (app) { return app.functions(); }), runOutsideAngular(zone));
        this.httpsCallable = function (name) { return function (data) { return _this.functions.pipe(map(function (functions) { return functions.httpsCallable(name); }), switchMap(function (callable) { return callable(data); }), map(function (response) { return response.data; }), runOutsideAngular(zone)); }; };
    }
    AngularFireFunctions.decorators = [
        { type: Injectable },
    ];
    AngularFireFunctions.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [FirebaseOptionsToken,] }] },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FirebaseNameOrConfigToken,] }] },
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: NgZone }
    ]; };
    return AngularFireFunctions;
}());
export { AngularFireFunctions };
//# sourceMappingURL=functions.js.map